name: Build Console and Daemon

on:
  workflow_dispatch:
  # Allow calling from release script
  workflow_call:
    inputs:
      release:
        required: false
        type: boolean
        default: false
      release_tag:
        required: false
        type: string
  # Build on push/pull to main
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Build the windows client
  build-client:
    name: Build console client on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache-dependency-path: console/pnpm-lock.yaml
          cache: 'pnpm'

      - name: CD, install, and build
        run: |
          cd console
          pnpm install
          pnpm dist

      # Non-release console artifact upload
      - name: Upload Console Artifact
        if: ${{ !(inputs.release) }}
        uses: actions/upload-artifact@v4
        with: 
          name: rc2-console-win
          path: console/output/rc2-console.exe
          if-no-files-found: error

      # Release upload
      - name: Upload Console Release Artifact
        if: ${{ inputs.release }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mv console/output/rc2-console.exe ./rc2-console-${{ inputs.release_tag }}.exe
          gh release upload ${{ inputs.release_tag }} ./rc2-console-${{ inputs.release_tag }}.exe

  # Build the daemon for windows/linux
  build-daemon:
    name: Build Daemon on ${{ matrix.runtime }}
    strategy:
      matrix:
        runtime: [linux-x64, win-x64]
    runs-on: ubuntu-latest
    env:
      DAEMON_SRC_PATH: ./daemon
      PUBLISH_PATH: /opt/rc2-daemon
    steps:
      # Checkout repo with recursive submodules
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      # Setup dotnet environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      # Restore deps
      #- name: Restore dependencies
      #  run: dotnet restore
      #  working-directory: ${{ env.DAEMON_SRC_PATH }}
      
      # Restore, Build & Publish the daemon
      - name: Build & Publish
        working-directory: ${{ env.DAEMON_SRC_PATH }}
        run: dotnet publish -c Release -r ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -o "${{ env.PUBLISH_PATH }}" "daemon.csproj"
      
      # Upload non-release artifacts
      - name: Upload non-release artifacts
        if: ${{ !(inputs.release) }}
        uses: actions/upload-artifact@v4
        with: 
          name: rc2-daemon-${{ matrix.runtime }}
          path: |
            ${{ env.PUBLISH_PATH }}/daemon.exe
            ${{ env.PUBLISH_PATH }}/daemon
            ${{ env.PUBLISH_PATH }}/*.dll
            ${{ env.PUBLISH_PATH }}/config.example.toml
          if-no-files-found: error
      
      # Upload windows release zip
      - name: Upload win-x64 release zip
        if: ${{ (matrix.runtime == 'win-x64') && (inputs.release) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          zip rc2-daemon-${{ inputs.release_tag }}-${{ matrix.runtime }}.zip ${{ env.PUBLISH_PATH }}/daemon.exe ${{ env.PUBLISH_PATH }}/*.dll ${{ env.PUBLISH_PATH }}/config.example.toml
          gh release upload ${{ inputs.release_tag }} rc2-daemon-${{ inputs.release_tag }}-${{ matrix.runtime }}.zip

      # Upload linux release tar
      - name: Upload linux-x64 release tar
        if: ${{ (matrix.runtime == 'linux-x64') && (inputs.release) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tar -czvf rc2-daemon-${{ inputs.release_tag }}-${{ matrix.runtime }}.tar.gz ${{ env.PUBLISH_PATH }}/daemon ${{ env.PUBLISH_PATH }}/*.dll ${{ env.PUBLISH_PATH }}/config.example.toml
          gh release upload ${{ inputs.release_tag }} rc2-daemon-${{ inputs.release_tag }}-${{ matrix.runtime }}.tar.gz
          